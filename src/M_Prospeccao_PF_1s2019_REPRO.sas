

/***********************/
/***********************/
/***********************/
/****PROSPECACAO PF*****/
/***********************/
/***********************/
/***********************/


%include '/dados/infor/suporte/FuncoesInfor.sas';

LIBNAME DB2ATO DB2 DATABASE=BDB2P04 SCHEMA=DB2ATO AUTHDOMAIN=DB2SGCEN;
LIBNAME DB2DEB DB2 DATABASE=BDB2P04 SCHEMA=DB2DEB AUTHDOMAIN=DB2SGCEN;
LIBNAME DB2OPR DB2 DATABASE=BDB2P04 SCHEMA=DB2OPR AUTHDOMAIN=DB2SGCEN;
LIBNAME DB2ACC DB2 DATABASE=BDB2P04 SCHEMA=DB2ACC AUTHDOMAIN=DB2SGCEN;
LIBNAME DB2DEB DB2 DATABASE=BDB2P04 SCHEMA=DB2DEB AUTHDOMAIN=DB2SGCEN;
LIBNAME DB2REL DB2 DATABASE=BDB2P04 SCHEMA=DB2REL AUTHDOMAIN=DB2SGCEN;

LIBNAME AUX_1 "/dados/infor/producao/prospeccao_pf_19";
LIBNAME SEG '/dados/publica/b_dados';
LIBNAME NEWREL "/dados/gecen/interno/bases/rel";
LIBNAME COX "/dados/infor/conexao/2019/000000179";


DATA _NULL_;

D1 = diaUtilAnterior(TODAY());
CALL SYMPUT('D1',COMPRESS(D1,' '));

NOVO_D1 = diaUtilAnterior(TODAY());
CALL SYMPUT('NOVO_D1',"'"||Put(NOVO_D1, FINDFDD10.)||"'");

ANO_ATUAL = 2019;
CALL SYMPUT('ANO_ATUAL',COMPRESS(ANO_ATUAL,' '));

/*MES_POSICAO = 01*/
MES_POSICAO = Put(MONTH (diaUtilAnterior(TODAY())), Z2.);
CALL SYMPUT('MES_POSICAO', COMPRESS(MES_POSICAO,' '));

/*ANOMES = 201901*/
ANOMES = Put(D1, yymmn6.);
CALL SYMPUT('ANOMES',COMPRESS(ANOMES,' '));

/*MESANO = 012019*/
MESANO = Put(D1, mmyyn6.);
CALL SYMPUT('MESANO',COMPRESS(MESANO,' '));

DT_CORTE = '31dec2018'd;
CALL SYMPUT('DT_CORTE',"'"||Put(DT_CORTE, FINDFDD10.)||"'");

	
RUN;

%Put &D1 &NOVO_D1 &ANO_ATUAL &MES_POSICAO &ANOMES &MESANO &DT_CORTE;



/***********************/
/***********************/
/*******PROCESSANDO*****/
/***********************/
/***********************/


/*EXCLUINDO O PASSADO DAS CONTAS CORRENTES*/
/*EXCLUINDO O PASSADO DAS CONTAS CORRENTES*/
/*EXCLUINDO O PASSADO DAS CONTAS CORRENTES*/
/*EXCLUINDO O PASSADO DAS CONTAS CORRENTES*/


/*TRAZENDO AS CONTAS CORRENTE ATIVAS EM 31/12*/


PROC SQL;
	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	CREATE TABLE ABERTURA_EXCLUIR_1 AS SELECT * FROM CONNECTION TO DB2(

SELECT DISTINCT A.CD_PRF_DEPE_CDU, 
                A.NR_CTR_OPR, 
                B.CD_PSS_CTR_OPR AS CD_CLI

					                FROM DB2OPR.CTR_OPR A
					     	        INNER JOIN DB2OPR.PRTC_PSS_CTR_OPR B ON (A.NR_UNCO_CTR_OPR = B.NR_UNCO_CTR_OPR)

                                    WHERE 
                                        A.DT_FRMZ <= &DT_CORTE. 
                                    AND B.DT_FIM_PRTC > &DT_CORTE. 
									AND A.CD_PRD = 6
									AND A.CD_MDLD <> 34
                                    AND B.NR_SEQL_PRTC = 1)
ORDER BY 1,2;

QUIT;


PROC SQL;

   CREATE TABLE ABERTURA_EXCLUIR_1 AS 

      SELECT DISTINCT t1.CD_PRF_DEPE_CDU, NR_CTR_OPR, t1.CD_CLI
 
      FROM ABERTURA_EXCLUIR_1 t1        
      
ORDER BY 1, 2, 3;
QUIT;


/*TRAZENDO AS CONTAS POUPANÇA ATIVAS EM 31/12*/


PROC SQL;
CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	    CREATE TABLE CONTA_POUPANCA_TODAS_1 as select * FROM CONNECTION TO DB2(

		SELECT DISTINCT
		       A.CD_PRF_DEPE_CDU,
		       DIGITS(A.NR_CTR_OPR) as NR_CTR_OPR,
			   B.CD_PSS_CTR_OPR AS CD_CLI
		       
		FROM DB2OPR.CTR_OPR A
        INNER JOIN DB2OPR.PRTC_PSS_CTR_OPR B ON (A.NR_UNCO_CTR_OPR = B.NR_UNCO_CTR_OPR)

	    WHERE 
		    A.DT_FRMZ <= &DT_CORTE.
		AND B.DT_FIM_PRTC > &DT_CORTE.
		AND A.CD_PRD = 3 
        AND A.CD_MDLD = 1 
        AND B.NR_SEQL_PRTC = 1)
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3;
QUIT;


/*ARRUMANDO AS CONTAS POUPANÇA ATIVAS EM 31/12*/


PROC SQL;

   CREATE TABLE CONTA_POUPANCA_TODAS_2 AS 

      SELECT DISTINCT t1.CD_PRF_DEPE_CDU, INPUT(SUBSTR(t1.NR_CTR_OPR, 11, 7), 7.) as NR_CTR_OPR, t1.CD_CLI
 
      FROM CONTA_POUPANCA_TODAS_1 t1        
      
ORDER BY 1, 2, 3;
QUIT;


/*EXCLUINDO AS CONTAS POUPANÇA ATIVAS DAS CONTAS CORRENTES ATIVAS*/


PROC SQL;
   CREATE TABLE ABERTURA_EXCLUIR_2 AS 
   SELECT DISTINCT t1.CD_PRF_DEPE_CDU, t1.NR_CTR_OPR, t1.CD_CLI
      FROM ABERTURA_EXCLUIR_1 t1  
      LEFT JOIN CONTA_POUPANCA_TODAS_2 t2 ON t1.CD_CLI = t2.CD_CLI and t1.NR_CTR_OPR = t2.NR_CTR_OPR and t1.CD_PRF_DEPE_CDU = t2.CD_PRF_DEPE_CDU
      WHERE t2.CD_CLI IS MISSING
ORDER BY 1, 2, 3;
QUIT;


/*PEGANDO OS MCIs PARA A EXCLUSAO*/


PROC SQL;
   CREATE TABLE ABERTURA_EXCLUIR_3 AS 
   SELECT DISTINCT 

           t1.CD_CLI
		  		  
      FROM ABERTURA_EXCLUIR_2 t1
	  ORDER BY 1;
QUIT;


/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/
/*TRAZENDO AS CONTAS*/ /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/  /*TRAZENDO AS CONTAS*/


PROC SQL;
    CREATE TABLE CONTAS_MIGRADAS_1 AS
    SELECT DISTINCT
        t1.CD_UOR_CC,
        t1.NR_CC,
		DATEPART(t1.TS_AUTZ_CMDO) FORMAT yymmdd10. AS DATA_ABERTURA, 
        t1.TS_AUTZ_CMDO AS TS_SLCT_ABTR_CC

    FROM
        DB2DEB.FATO_OCRD_CC t1
		WHERE
        t1.CD_CMDO_CC = 23 AND
        YEAR(t1.TS_AUTZ_CMDO) = &ANO_ATUAL.
        AND
        t1.NR_INF_ANT_CC IN (312100600, 310019100) AND
        t1.NR_INF_ATU_CC IN (310018505, 310018511, 310019801, 310019802, 310019803, 310019804, 310019805, 310019806,
                             310019808, 310019809, 310019810, 310019811, 310019813, 310019814, 310019821, 310019823,
                             310019824, 310019830, 310019836, 310019837, 310019838, 311600510, 311600520, 311601001,
                             311602001, 312015301, 312015302, 312015303, 319301037, 319301038)

GROUP BY 1, 2, 3
ORDER BY 1,2;
QUIT;


PROC SQL;

	CREATE TABLE CONTAS_MIGRADAS_2 AS SELECT DISTINCT 

	    t1.CD_PRF_DEPE_CDU AS CD_UOR_CC,
        t1.NR_CTR_OPR AS NR_CC,
		t2.CD_PSS_CTR_OPR AS CD_CLI_TITR_CC        					

					                 FROM DB2OPR.CTR_OPR t1 
					     	         INNER JOIN DB2OPR.PRTC_PSS_CTR_OPR t2 ON t1.NR_UNCO_CTR_OPR = t2.NR_UNCO_CTR_OPR

                                     WHERE 
                                      t1.CD_PRD = 6
									 AND t1.CD_MDLD NOT IN (2, 9, 13, 18, 27, 31, 33, 34, 37)
									 AND t2.NR_SEQL_PRTC = 1
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3;

QUIT;


PROC SQL;

	CREATE TABLE CONTAS_MIGRADAS_3 AS SELECT DISTINCT 

	    t1.CD_UOR_CC,
        t1.NR_CC,
		t2.CD_CLI_TITR_CC,
		t1.DATA_ABERTURA,
        t1.TS_SLCT_ABTR_CC 	

					                 FROM CONTAS_MIGRADAS_1 t1 
					     	         LEFT JOIN CONTAS_MIGRADAS_2 t2 ON t1.CD_UOR_CC = t2.CD_UOR_CC AND t1.NR_CC = t2.NR_CC
									 WHERE t2.CD_CLI_TITR_CC IS NOT MISSING
                                     
GROUP BY 1, 2, 3
ORDER BY 1, 2, 3;

QUIT;


PROC SQL;
   CREATE TABLE CONTAS_MIGRADAS_4 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC, 
          t1.CD_CLI_TITR_CC,
		  t1.DATA_ABERTURA,
		  MIN(t1.TS_SLCT_ABTR_CC) FORMAT DATETIME. AS TS_SLCT_ABTR_CC          
		  		  
      FROM CONTAS_MIGRADAS_3 t1
	  GROUP BY 1, 2
      ORDER BY 1, 2;
QUIT;


PROC SQL;
   CREATE TABLE CONTAS_MIGRADAS_5 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC, 
          t1.CD_CLI_TITR_CC,
		  t1.DATA_ABERTURA, 
		  t1.TS_SLCT_ABTR_CC          
		  		  
      FROM CONTAS_MIGRADAS_4  t1
	  GROUP BY 1, 2
      ORDER BY 1, 2;
QUIT;


/*CONTAS MASSIFICADAS*/
/*CONTAS MASSIFICADAS*/
/*CONTAS MASSIFICADAS*/
/*CONTAS MASSIFICADAS*/

/*TRAZENDO AS CONTAS MASSIFICADAS ABERTAS EM 2019*/

PROC SQL;

   CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
   CREATE TABLE MASSIFICADAS_1 AS SELECT * 
   FROM CONNECTION TO DB2(

          SELECT 
          t1.DEB307_AGENCIA as CD_UOR_CC, 
          t1.DEB307_CONTA as NR_CC, 
          t1.DEB307_COD_BDC as CD_CLI_TITR_CC,
		  t1.DEB307_DT_ABERTURA as DATA_ABERTURA

          FROM DB2DEB.TDEB307 t1

		   WHERE 
 
		       t1.DEB307_DT_ABERTURA <= &NOVO_D1. 
		   AND t1.DEB307_DT_ABERTURA > &DT_CORTE.
           
           AND t1.DEB307_COD_BDC <> 0
		   AND t1.DEB307_RAZAO IN(310018505, 310019801, 310019808, 310019809, 310019836, 311602001, 312015301, 312015302, 312015303, 319301037)

		   )

    ORDER BY 4;

QUIT;


/*EXCLUINDO PRODUTO MODALIDADE NÃO UTILIZADOS*/

PROC SQL;
CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	    CREATE TABLE CONTAS_FORA as select * FROM CONNECTION TO DB2(

		SELECT DISTINCT
		       A.CD_PRF_DEPE_CDU AS CD_UOR_CC,
		       A.NR_CTR_OPR AS NR_CC,
			   B.CD_PSS_CTR_OPR AS CD_CLI_TITR_CC,
			   A.DT_FRMZ
		       
		FROM DB2OPR.CTR_OPR A
        INNER JOIN DB2OPR.PRTC_PSS_CTR_OPR B ON (A.NR_UNCO_CTR_OPR = B.NR_UNCO_CTR_OPR)

	    WHERE 
		    A.DT_FRMZ > &DT_CORTE.
		AND A.DT_FRMZ <= &NOVO_D1.
		AND A.CD_PRD = 6 
        AND A.CD_MDLD IN (2, 9, 13, 18, 27, 31, 33, 34, 37) 
        AND B.NR_SEQL_PRTC = 1)

ORDER BY 1,2,3;
QUIT;


PROC SQL;
   CREATE TABLE MASSIFICADAS_1_B AS 
   SELECT DISTINCT 
          
          t1.CD_UOR_CC, 
          t1.NR_CC, 
          t1.CD_CLI_TITR_CC,
		  t1.DATA_ABERTURA	  
		  		  
      FROM MASSIFICADAS_1 t1
	  LEFT JOIN CONTAS_FORA t2 ON t1.CD_UOR_CC = t2.CD_UOR_CC AND t1.NR_CC = t2.NR_CC AND t1.CD_CLI_TITR_CC = t2.CD_CLI_TITR_CC	
	  WHERE t1.CD_UOR_CC IS NOT MISSING
	  GROUP BY 1, 2, 3
	  ORDER BY 1, 2, 3;
QUIT;


PROC SQL;
   CREATE TABLE MASSIFICADAS_2 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC, 
          t1.CD_CLI_TITR_CC,
          MIN(t1.DATA_ABERTURA) FORMAT yymmdd10. AS DT_ABERTURA		  
		  		  
      FROM MASSIFICADAS_1_B t1
	  GROUP BY 1, 2
      ORDER BY 1, 2;
QUIT;


/*CONTAS CORRENTES*/
/*CONTAS CORRENTES*/
/*CONTAS CORRENTES*/
/*CONTAS CORRENTES*/

/*TRAZENDO AS CONTAS CORRENTE ABERTAS EM 2019*/


PROC SQL;
	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	CREATE TABLE ABERTURA_CONTA_1 AS SELECT * FROM CONNECTION TO DB2(

           SELECT 

           t1.CD_UOR_CC, 
		   t1.NR_CC,		    
	       t2.CD_CLI_TITR_CC,
		   t1.TS_SLCT_ABTR_CC,
		   DATE(t1.TS_SLCT_ABTR_CC) AS DT_ABERTURA,
		   MONTH(DATE(TS_SLCT_ABTR_CC)) AS MES

		   FROM DB2ACC.SLCT_ABTR_CC t1


			                INNER JOIN DB2ACC.TITR_SLCT_ABTR_CC T2 ON (T1.CD_UOR_CC = T2.CD_UOR_CC AND T1.NR_CC = T2.NR_CC)	  

							        LEFT JOIN (SELECT B.CD_PSS_CTR_OPR AS CD_CLI FROM DB2OPR.CTR_OPR A
					     	        INNER JOIN DB2OPR.PRTC_PSS_CTR_OPR B ON (A.NR_UNCO_CTR_OPR = B.NR_UNCO_CTR_OPR)

                                    WHERE A.CD_PRD = 6 
									  AND A.CD_MDLD NOT IN (2, 9, 13, 18, 27, 31, 33, 34, 37)
									  AND A.DT_FRMZ > &DT_CORTE.
                                      AND B.NR_SEQL_PRTC = 1) T4 
									   

                                    ON (T2.CD_CLI_TITR_CC = T4.CD_CLI)

				                    
           WHERE 

               t1.IN_SLCT_ABTR_PRCD = 'S'
		   AND T1.CD_TIP_CC_ABTR = 1
		   AND T1.CD_CNL_ABTR_CC <> 20

           AND DATE(t1.TS_SLCT_ABTR_CC) <= &NOVO_D1. 
		   AND DATE(t1.TS_SLCT_ABTR_CC) > &DT_CORTE.

		   AND T2.NR_SEQL_TITR_CC = 1
		   								
           AND T4.CD_CLI IS NOT NULL)

	ORDER BY 1, 2, 3;

QUIT;



PROC SQL;
   CREATE TABLE ABERTURA_CONTA_2 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC, 
          t1.CD_CLI_TITR_CC,
		  t1.DT_ABERTURA,
		  MIN(t1.TS_SLCT_ABTR_CC) FORMAT DATETIME. AS TS_SLCT_ABTR_CC
          
		  		  
      FROM ABERTURA_CONTA_1 t1
	  GROUP BY 1, 2
      ORDER BY 1, 2;
QUIT;


PROC SQL;
   CREATE TABLE ABERTURA_CONTA_3 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC, 
          t1.CD_CLI_TITR_CC,
		  t1.DT_ABERTURA,
		  TS_SLCT_ABTR_CC          
		  		  
      FROM ABERTURA_CONTA_2 t1
	  GROUP BY 1, 2
      ORDER BY 1, 2;
QUIT;



/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/
/*CONTAS FINAL*/


proc sql;
create table TODAS_CONTAS as 
select t1.*
from (
select * from MASSIFICADAS_2
union
select * from ABERTURA_CONTA_3
union
select * from CONTAS_MIGRADAS_5
) t1
;
quit;


/*TIRANDO A DUPLICIDADE NAS CONTAS REGRA 1*/
/*TIRANDO A DUPLICIDADE NAS CONTAS REGRA 1*/


PROC SQL;
   CREATE TABLE CLIENTES_PF_PROSP_2 AS 
   SELECT DISTINCT 

          t1.CD_UOR_CC AS PREFIXO, 
          t1.CD_CLI_TITR_CC AS MCI,
		  MIN(t1.DT_ABERTURA) FORMAT yymmdd10. AS DT_ABERTURA
		            
       FROM TODAS_CONTAS t1  
	    
       GROUP BY 1,2
    ORDER BY 1,2;
QUIT;


/*VERIFICANDO SE EXISTIA CONTA ATIVA EM 31/12*/
/*VERIFICANDO SE EXISTIA CONTA ATIVA EM 31/12*/


PROC SQL;
   CREATE TABLE CLIENTES_PF_PROSP_2_CC_ATIVA AS 
   SELECT DISTINCT 

          t1.PREFIXO, 
          t1.MCI,
		  t1.DT_ABERTURA,
		  IFC(t2.CD_CLI IS MISSING, "Sim", "Não")  AS CLIENTE_NOVO 
		            
       FROM CLIENTES_PF_PROSP_2 t1 
    LEFT JOIN ABERTURA_EXCLUIR_3 t2 ON (t1.MCI = t2.CD_CLI) 
	GROUP BY 1,2
    ORDER BY 1,2;
QUIT;


/*VERIFICANDO SE ESTAVAM ENCARTEIRADOS EM CARTEIRA NEGOCIAL EM 31/12*/
/*VERIFICANDO SE ESTAVAM ENCARTEIRADOS EM CARTEIRA NEGOCIAL EM 31/12*/


PROC SQL;
   CREATE TABLE EXCLUIR_CLIENTES AS 
   SELECT DISTINCT 

          t1.MCI

       FROM CLIENTES_PF_PROSP_2_CC_ATIVA t1  
	   INNER JOIN COMUM.PAI_REL_201812 t2 ON t1.MCI = t2.CD_CLI
	   WHERE t2.CD_TIP_CTRA IN (10, 16, 50, 57, 56, 60, 77)
	ORDER BY 1;
QUIT;


PROC SQL;
   CREATE TABLE CLIENTES_PF_PROSP_2 AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO,    
          t1.DT_ABERTURA,
		  t1.CLIENTE_NOVO,
		  IFC(t2.MCI IS MISSING, "Não", "Sim") AS ENCART_DEZ
		  
       FROM CLIENTES_PF_PROSP_2_CC_ATIVA t1  
	   LEFT JOIN EXCLUIR_CLIENTES t2 ON t1.MCI = t2.MCI
  GROUP BY 1,2	   
  ORDER BY 1,2;
QUIT;


/*SEPARANDO AS CARTEIRAS DOS SEGMENTOS A B e C */
/*SEPARANDO AS CARTEIRAS DOS SEGMENTOS A B e C */
/*SEPARANDO AS CARTEIRAS DOS SEGMENTOS A B e C */
/*SEPARANDO AS CARTEIRAS DOS SEGMENTOS A B e C */


PROC SQL;
   CREATE TABLE CLIENTES_PF_PROSP_3 AS 
   SELECT DISTINCT

          t1.MCI,
          t1.PREFIXO,           
		  t1.DT_ABERTURA,
		  IFC(t2.SEGMENTO IS NOT NULL, t2.SEGMENTO, "Nulo") AS PERFIL,
          t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  IFC(t2.SEGMENTO IN ('PF A' 'PF B' 'PF C'), "Sim", "Não") AS SEGMENTO_ABC

      FROM CLIENTES_PF_PROSP_2 t1
           LEFT JOIN SEG.PAI_SEGPF_&ANOMES. t2 ON (t1.MCI = t2.CD_CLI)
		   WHERE t2.SEGMENTO IN ('PF A' 'PF B' 'PF C')
GROUP BY 1,2	  
ORDER BY 1,2;
QUIT;


/*CADASTRO VIGENTE E ANOTAÇÃO CADASTRAL*/
/*CADASTRO VIGENTE E ANOTAÇÃO CADASTRAL*/
/*CADASTRO VIGENTE E ANOTAÇÃO CADASTRAL*/
/*CADASTRO VIGENTE E ANOTAÇÃO CADASTRAL*/


PROC SQL;

   CREATE TABLE CLIENTES_PF_PROSP_5_ANT AS 
   SELECT  DISTINCT 

          t1.MCI,
          t1.PREFIXO, 
          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  IFC(t2.CD_EST_LMCR = 10, "Sim", "Não") as LIMICRED

   FROM CLIENTES_PF_PROSP_3 t1
   LEFT JOIN BCN.BCN_PF t2 ON t1.MCI = t2.MCI
      
   GROUP BY 1,2
   ;

QUIT;


PROC SQL;

   CREATE TABLE CLIENTES_PF_PROSP_5 AS 
   SELECT  DISTINCT 

          t1.MCI,
          t1.PREFIXO, 
          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  IFC(t2.MAX_PESO_ANOT_CADL <> 3 AND t2.MAX_PESO_ANOT_CADL <> 4, "Não", "Sim") as RESTRICAO

   FROM CLIENTES_PF_PROSP_5_ANT t1
   LEFT JOIN BCN.BCN_PF t2 ON t1.MCI = t2.MCI
      
   GROUP BY 1,2
   ;

QUIT;


/*APP HABILITADO*/
/*APP HABILITADO*/
/*APP HABILITADO*/
/*APP HABILITADO*/


PROC SQL;

   CREATE TABLE CLIENTES_PF_PROSP_6_ANT_2 AS 
   SELECT DISTINCT 

          t1.MCI

   FROM CLIENTES_PF_PROSP_5 t1
   INNER JOIN DB2ATO.EQPO_CLI t2 ON t1.MCI = t2.CD_CLI_AUTD_TRAN
   WHERE t2.CD_ITCE = 2 AND t2.CD_TIP_EQPO <> 5   

   GROUP BY 1
   ORDER BY 1;

QUIT;


PROC SQL;

   CREATE TABLE CLIENTES_PF_PROSP_6 AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO, 
          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  IFC(t2.MCI IS NOT MISSING, "Sim", "Não") as APPHAB

   FROM CLIENTES_PF_PROSP_5 t1
   LEFT JOIN CLIENTES_PF_PROSP_6_ANT_2 t2 ON t1.MCI = t2.MCI
   GROUP BY 1,2
   ORDER BY 1,2;

QUIT;


/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/
/*BLOCO DO ENCARTEIRAMENTO NEGOCIAL*/


/*CARTEIRA NEGOCIAL*/

PROC SQL;

   CREATE TABLE CLIENTE_ENCARTEIRADO_4 AS SELECT
          DISTINCT t1.CD_CLI,

          t1.CD_PRF_DEPE, 
          t1.NR_SEQL_CTRA_ATB AS NR_SEQL_CTRA, 
          t1.CD_TIP_CTRA		            
		   	  
      FROM NEWREL.REL_CARTEIRA_PRINCIPAL t1
      WHERE t1.CD_TIP_CTRA IN (10, 16, 50, 57, 56, 59, 60, 64, 65, 77);  

QUIT;

/*CARTEIRA ESTILO*/


%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);


PROC SQL;

   CREATE TABLE CLIENTE_ENCARTEIRADO_4_ESTILO AS SELECT
          DISTINCT t1.CD_CLI,

          t1.CD_PRF_DEPE, 
          t1.NR_SEQL_CTRA_ATB AS NR_SEQL_CTRA, 
          t1.CD_TIP_CTRA          
		   	  
      FROM NEWREL.REL_CARTEIRA_PRINCIPAL t1
	  INNER JOIN PREFIXOS_IND_000000179 t2 ON t1.CD_PRF_DEPE = t2.PREFDEP AND t1.NR_SEQL_CTRA_ATB = t2.CTRA
      WHERE t2.PREFDEP <> 0 AND t2.CTRA <> 0; 

QUIT;


/*TESTANDO SE EXISTE ENCARTEIRAMENTO NEGOCIAL E ESTILO*/
/*TESTANDO SE EXISTE ENCARTEIRAMENTO NEGOCIAL E ESTILO*/
/*TESTANDO SE EXISTE ENCARTEIRAMENTO NEGOCIAL E ESTILO*/
/*TESTANDO SE EXISTE ENCARTEIRAMENTO NEGOCIAL E ESTILO*/


PROC SQL;
   CREATE TABLE CLIENTES_PF_PROSP_4_C AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO,

          t2.CD_PRF_DEPE AS PREFDEP_NEG, 
          t2.NR_SEQL_CTRA AS CARTEIRA_NEG,

          t3.CD_PRF_DEPE AS PREFDEP_EST, 
          t3.NR_SEQL_CTRA AS CARTEIRA_EST,

		  t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB

      FROM CLIENTES_PF_PROSP_6 t1

           LEFT JOIN CLIENTE_ENCARTEIRADO_4 t2 ON t1.MCI = t2.CD_CLI
		   LEFT JOIN CLIENTE_ENCARTEIRADO_4_ESTILO t3 ON t1.MCI = t3.CD_CLI

GROUP BY 1,2	  
ORDER BY 5;

QUIT;


PROC STDIZE DATA=CLIENTES_PF_PROSP_4_C OUT=CLIENTES_PF_PROSP_4_C REPONLY MISSING=0;
	VAR _NUMERIC_;
QUIT;


/*CONTINUANDO*/


PROC SQL;

   CREATE TABLE TABELA_INTERMEDIARIA AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO,
          
          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  IFC(t1.PREFDEP_NEG <> 0 AND t1.CARTEIRA_NEG <> 0, "Sim", "Não") AS ENCARTEIRADO
          
      FROM CLIENTES_PF_PROSP_4_C t1

GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


PROC SQL;

   CREATE TABLE TABELA_INTERMEDIARIA_2 AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO, 
          
          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  t1.ENCARTEIRADO,

		  IFC(t1.CLIENTE_NOVO = "Sim " AND t1.ENCART_DEZ = "Não" AND t1.SEGMENTO_ABC = "Sim" AND LIMICRED = "Sim" AND RESTRICAO = "Não" AND
          APPHAB = "Sim" AND t1.ENCARTEIRADO = "Sim", "Sim", "Não") as QUALIFICADO

          FROM TABELA_INTERMEDIARIA t1
	  
GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


/*VERIFICANDO SE JA FORAM CONTABILIZADOS NO MES ANTERIOR*/
/*VERIFICANDO SE JA FORAM CONTABILIZADOS NO MES ANTERIOR*/
/*VERIFICANDO SE JA FORAM CONTABILIZADOS NO MES ANTERIOR*/
/*VERIFICANDO SE JA FORAM CONTABILIZADOS NO MES ANTERIOR*/


PROC SQL;
   CREATE TABLE CONEX_PROV_JAN AS 
   SELECT DISTINCT 

          t1.cli as MCI		  

       FROM COX.cli_ind_000000179_dt012019 T1
 	   WHERE t1.COMP = 1
	   ORDER BY 1;
QUIT;


PROC SQL;

   CREATE TABLE TABELA_INTERMEDIARIA_3 AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO,
          
          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  t1.ENCARTEIRADO,
		  t1.QUALIFICADO,

		  IFC(t2.MCI IS NOT MISSING, "Janeiro", IFC(t1.QUALIFICADO = "Sim", "Fevereiro", "Não Qualificado" )) AS MES_QUAL

      FROM TABELA_INTERMEDIARIA_2 t1

	  LEFT JOIN CONEX_PROV_JAN t2 ON t1.MCI = t2.MCI	  

GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


PROC SQL;

   CREATE TABLE TABELA_INTERMEDIARIA_4 AS 
   SELECT DISTINCT 

          t1.MCI,
          t1.PREFIXO,
          
          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
		  t1.CLIENTE_NOVO,
		  t1.ENCART_DEZ,
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  t1.ENCARTEIRADO,
		  t1.QUALIFICADO,
          t1.MES_QUAL

      FROM TABELA_INTERMEDIARIA_3 t1
	  
GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


/********TRAZENDO A INDICAÇÃO*******/
/********TRAZENDO A INDICAÇÃO*******/


PROC SQL;

   CREATE TABLE TAB_INDICACAO AS 
   SELECT DISTINCT 

      t1.CD_PRF_DEPE AS PREFIXO, 
      t1.CD_JRDC_ENCT AS PREF_IND,
	  t1.CD_CLI AS MCI
	          
          
      FROM DB2REL.JRDC_CLI_PTNL_ENCT t1
	  WHERE t1.cd_tip_est_cnvt in (20,60,360)
	  AND year(t1.dt_cnvt_enct) = &ANO_ATUAL. AND month(t1.dt_cnvt_enct) = &MES_POSICAO.
   
ORDER BY 1,2;

QUIT;
 

%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);


PROC SQL;

   CREATE TABLE CLIENTES_TABELA_TOTAL AS 
   SELECT DISTINCT 
          
          t1.MCI,
          t1.PREFIXO, 

          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
          
		  IFC(t1.CLIENTE_NOVO = "Sim" AND t1.ENCART_DEZ = "Não", "Sim", "Não") as CLIENTE_NOVO,		  
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  t1.ENCARTEIRADO,
		  t1.QUALIFICADO,
          t1.MES_QUAL,
		  t2.PREF_IND

      FROM TABELA_INTERMEDIARIA_4 t1
	  LEFT JOIN TAB_INDICACAO t2 ON t1.PREFIXO = t2.PREFIXO AND t1.MCI = t2.MCI
	  INNER JOIN PREFIXOS_IND_000000179 t2 ON t1.PREFIXO = t2.PREFDEP
	  
GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


PROC STDIZE DATA=CLIENTES_TABELA_TOTAL OUT=CLIENTES_TABELA_TOTAL REPONLY MISSING=0;
	VAR _NUMERIC_;
QUIT;


PROC SQL;

   CREATE TABLE CLIENTES_TABELA_MES AS 
   SELECT DISTINCT 
          
          t1.MCI,
          t1.PREFIXO, 

          t1.PREFDEP_NEG, 
          t1.CARTEIRA_NEG,

          t1.PREFDEP_EST, 
          t1.CARTEIRA_EST,

          t1.DT_ABERTURA,		 
          t1.PERFIL,
          
		  t1.CLIENTE_NOVO,
		  
		  t1.SEGMENTO_ABC,
		  t1.LIMICRED,
		  t1.RESTRICAO,
		  t1.APPHAB,
		  t1.ENCARTEIRADO,
		  t1.QUALIFICADO,
          t1.MES_QUAL,
		  t1.PREF_IND

      FROM CLIENTES_TABELA_TOTAL t1
	  WHERE t1.MES_QUAL = "Fevereiro" AND MONTH(DT_ABERTURA) <> 03
	  	  
GROUP BY 1,2           
ORDER BY 1,2;

QUIT;


/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/
/*TOTAL PREFIXOS*/


/*DESCOBRINDO QUAIS SÃO AS AGENCIAS ESTILO*/
/*DESCOBRINDO QUAIS SÃO AS AGENCIAS ESTILO*/
/*DESCOBRINDO QUAIS SÃO AS AGENCIAS ESTILO*/
/*DESCOBRINDO QUAIS SÃO AS AGENCIAS ESTILO*/


%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);


PROC SQL;

   CREATE TABLE ESTILO AS 

      SELECT DISTINCT t1.CD_PRF_DEPE
 
      FROM CLIENTE_ENCARTEIRADO_4_ESTILO t1 
	        
GROUP BY 1
ORDER BY 1;

QUIT;


PROC SQL;

   CREATE TABLE NAO_ESTILO AS 

      SELECT DISTINCT t1.PREFDEP AS CD_PRF_DEPE
 
      FROM PREFIXOS_IND_000000179 t1 
	  INNER JOIN NEWREL.REL_CARTEIRA_PRINCIPAL t2 ON t1.PREFDEP = t2.CD_PRF_DEPE
      WHERE t1.PREFDEP <> 0 AND t1.CTRA = 0
      
GROUP BY 1
ORDER BY 1;

QUIT;


/*CONTINUANDO*/
/*CONTINUANDO*/
/*CONTINUANDO*/
/*CONTINUANDO*/
/*CONTINUANDO*/
/*CONTINUANDO*/


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_1 AS 
   SELECT DISTINCT PREFIXO, 0 AS CARTEIRA, MCI

          FROM CLIENTES_TABELA_MES t1
		  LEFT JOIN ESTILO t2 ON t1.PREFIXO = t2.CD_PRF_DEPE
          WHERE t2.CD_PRF_DEPE IS MISSING
   GROUP BY 1,2,3	  
   ORDER BY 1,2;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_2 AS 
   SELECT distinct PREFIXO, CARTEIRA, COUNT(MCI) AS QTDE_TOTAL_PREF

          FROM FINAL_PREFIXO_1
		  	        
   GROUP BY 1, 2          
   ORDER BY 1;

QUIT;


/*PAA*/
/*PAA*/
/*PAA*/

%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);


PROC SQL;

   CREATE TABLE FINAL_PAA_A1 AS 
   SELECT distinct input(t2.PREFAGENC, 4.) AS PREFIXO, 0 AS CARTEIRA, MCI

          FROM FINAL_PREFIXO_1 t1
		  INNER JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
		  INNER JOIN PREFIXOS_IND_000000179 t3 ON input(t2.PREFAGENC, 4.) = t3.PREFDEP
		  WHERE input(t2.PREFAGENC, 4.) <> 0
	                
   ORDER BY 1;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PAA_A2 AS 
   SELECT distinct PREFIXO, CARTEIRA, COUNT(MCI) AS QTDE_TOTAL_PREF_PAA_1

          FROM FINAL_PAA_A1 t1
		  	        
   GROUP BY 1          
   ORDER BY 1;

QUIT;


/*TOTAL PREFIXOS QUE TEM CARTEIRAS ESTILO*/
/*TOTAL PREFIXOS QUE TEM CARTEIRAS ESTILO*/
/*TOTAL PREFIXOS QUE TEM CARTEIRAS ESTILO*/
/*TOTAL PREFIXOS QUE TEM CARTEIRAS ESTILO*/


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_ESTILO_1 AS 
   SELECT DISTINCT PREFIXO, 0 AS CARTEIRA, MCI

          FROM CLIENTES_TABELA_MES t1
		  LEFT JOIN ESTILO t2 ON t1.PREFIXO = t2.CD_PRF_DEPE
          WHERE t2.CD_PRF_DEPE IS NOT MISSING
   GROUP BY 1,2,3	  
   ORDER BY 1,2;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_ESTILO_2 AS 
   SELECT distinct PREFIXO, CARTEIRA, COUNT(MCI) AS QTDE_TOTAL_PREF

          FROM FINAL_PREFIXO_ESTILO_1
		  	        
   GROUP BY 1, 2          
   ORDER BY 1;

QUIT;


/*PAA*/
/*PAA*/
/*PAA*/

%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);

PROC SQL;

   CREATE TABLE FINAL_PAA_B1 AS 
   SELECT distinct input(t2.PREFAGENC, 4.) AS PREFIXO, 0 AS CARTEIRA, MCI, INPUT(t2.UOR, 9.) AS UOR

          FROM FINAL_PREFIXO_ESTILO_1 t1
		  INNER JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
		  INNER JOIN PREFIXOS_IND_000000179 t3 ON input(t2.PREFAGENC, 4.) = t3.PREFDEP
		  WHERE input(t2.PREFAGENC, 4.) <> 0
	                
   ORDER BY 1;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PAA_B2 AS 
   SELECT distinct PREFIXO, CARTEIRA, COUNT(MCI) AS QTDE_TOTAL_PREF_PAA_2

          FROM FINAL_PAA_B1 t1
		  	        
   GROUP BY 1          
   ORDER BY 1;

QUIT;


/*TOTAL CARTEIRAS*/
/*TOTAL CARTEIRAS*/
/*TOTAL CARTEIRAS*/
/*TOTAL CARTEIRAS*/


%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);

PROC SQL;

   CREATE TABLE FINAL_PREFIXO_EST_CTRA_1 AS 
   SELECT DISTINCT t1.PREFIXO, t1.PREFDEP_EST, t1.CARTEIRA_EST, t1.MCI

          FROM CLIENTES_TABELA_MES t1
		  LEFT JOIN ESTILO t2 ON t1.PREFIXO = t2.CD_PRF_DEPE
          WHERE t2.CD_PRF_DEPE IS NOT MISSING
   GROUP BY 1,2,3,4	  
   ORDER BY 1,2,3,4;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_EST_CTRA_2 AS 
   SELECT distinct t1.PREFIXO, t1.CARTEIRA_EST AS CARTEIRA, t1.MCI

          FROM FINAL_PREFIXO_EST_CTRA_1 t1
		  INNER JOIN PREFIXOS_IND_000000179 t2 ON t1.PREFIXO = t2.PREFDEP AND t1.CARTEIRA_EST = t2.CTRA
		  WHERE t1.PREFIXO = t1.PREFDEP_EST
                     
   ORDER BY 1, 2;

QUIT;


PROC SQL;

   CREATE TABLE FINAL_PREFIXO_EST_CTRA_3 AS 
   SELECT DISTINCT PREFIXO, CARTEIRA, COUNT(MCI) AS QTDE_TOTAL_PREF, input(t2.UOR, 9.) AS UOR

          FROM FINAL_PREFIXO_EST_CTRA_2 t1
		  LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
		  	        
   GROUP BY 1, 2          
   ORDER BY 1;

QUIT;


/*MCIS ESTILO NAO ENCARTEIRADOS */

%BuscarPrefixosIndicador(IND=179, MMAAAA=&MESANO., NIVEL_CTRA=1, SO_AG_PAA=1);

PROC SQL;

   CREATE TABLE MCIS_N_ENCART AS 
   SELECT distinct t1.PREFIXO, 0 AS CARTEIRA, t1.MCI

          FROM FINAL_PREFIXO_EST_CTRA_1 t1
		  INNER JOIN PREFIXOS_IND_000000179 t3 ON t1.PREFIXO = t3.PREFDEP
		  LEFT JOIN FINAL_PREFIXO_EST_CTRA_2 t2 ON t1.PREFIXO = t2.PREFIXO AND t1.CARTEIRA_EST = t2.CARTEIRA
		  WHERE t2.PREFIXO IS MISSING AND t2.CARTEIRA IS MISSING
   GROUP BY 1, 2, 3, 4                     
   ORDER BY 1, 2;

QUIT;


/*FINAL DA PRIMEIRA PARTE DA SUMARIZAÇÃO*/
/*FINAL DA PRIMEIRA PARTE DA SUMARIZAÇÃO*/
/*FINAL DA PRIMEIRA PARTE DA SUMARIZAÇÃO*/
/*FINAL DA PRIMEIRA PARTE DA SUMARIZAÇÃO*/


DATA TABELA_FINAL_201;
	MERGE FINAL_PREFIXO_2 FINAL_PREFIXO_ESTILO_2;
	BY PREFIXO CARTEIRA;
RUN;


PROC STDIZE DATA=TABELA_FINAL_201 OUT=TABELA_FINAL_201 REPONLY MISSING=0;
	VAR _NUMERIC_;
QUIT;


/*****SUMARIZANDO******/
/*****SUMARIZANDO******/
/*****SUMARIZANDO******/
/*****SUMARIZANDO******/


PROC SQL;
CREATE TABLE TABELA_AUXILIAR AS SELECT DISTINCT t1.PREFIXO, t2.PREFSUPREG, t2.PREFSUPEST, t2.PREFUEN, t1.QTDE_TOTAL_PREF
FROM TABELA_FINAL_201 t1
LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
GROUP BY 1,2,3;
QUIT;


/**/

PROC SQL;
CREATE TABLE TABELA_FINAL_GEREV AS SELECT INPUT(t1.PREFSUPREG, 4.) AS PREFIXO, 0 AS CARTEIRA, SUM(t1.QTDE_TOTAL_PREF) AS QTDE_TOTAL_PREF
FROM TABELA_AUXILIAR t1
GROUP BY 1;
QUIT;


PROC SQL;
CREATE TABLE TABELA_FINAL_GEREV AS SELECT t1.PREFIXO, t1.CARTEIRA, t1.QTDE_TOTAL_PREF, input(t2.UOR, 9.) AS UOR
FROM TABELA_FINAL_GEREV t1
LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
;
QUIT;


/**/

PROC SQL;
CREATE TABLE TABELA_FINAL_SUPER AS SELECT INPUT(t1.PREFSUPEST, 4.) AS PREFIXO, 0 AS CARTEIRA, SUM(t1.QTDE_TOTAL_PREF) AS QTDE_TOTAL_PREF
FROM TABELA_AUXILIAR t1
GROUP BY 1;
QUIT;


PROC SQL;
CREATE TABLE TABELA_FINAL_SUPER AS SELECT t1.PREFIXO, t1.CARTEIRA, t1.QTDE_TOTAL_PREF, input(t2.UOR, 9.) AS UOR
FROM TABELA_FINAL_SUPER t1
LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
;
QUIT;


/**/

PROC SQL;
CREATE TABLE TABELA_FINAL_SUPPJPF AS SELECT INPUT(t1.PREFUEN, 4.) AS PREFIXO, 0 AS CARTEIRA, SUM(t1.QTDE_TOTAL_PREF) AS QTDE_TOTAL_PREF
FROM TABELA_AUXILIAR t1
GROUP BY 1;
QUIT;


PROC SQL;
CREATE TABLE TABELA_FINAL_SUPPJPF AS SELECT t1.PREFIXO, t1.CARTEIRA, t1.QTDE_TOTAL_PREF, input(t2.UOR, 9.) AS UOR
FROM TABELA_FINAL_SUPPJPF t1
LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
;
QUIT;


/**/

PROC SQL;
CREATE TABLE TABELA_FINAL_DIR AS SELECT 8592 AS PREFIXO, 0 AS CARTEIRA, SUM(t1.QTDE_TOTAL_PREF) AS QTDE_TOTAL_PREF, 18948 AS UOR
FROM TABELA_AUXILIAR t1
GROUP BY 1;
QUIT;


PROC SQL;
CREATE TABLE TABELA_FINAL_VICE AS SELECT 8166 AS PREFIXO, 0 AS CARTEIRA, SUM(t1.QTDE_TOTAL_PREF) AS QTDE_TOTAL_PREF, 18525 AS UOR
FROM TABELA_AUXILIAR t1
GROUP BY 1;
QUIT;

/**/

/*SOMANDO OS PAAS NOS PREFIXOS*/
DATA TABELA_FINAL_202;
	MERGE TABELA_FINAL_201 FINAL_PAA_A2 FINAL_PAA_B2;
	BY PREFIXO CARTEIRA;
RUN;


PROC STDIZE DATA=TABELA_FINAL_202 OUT=TABELA_FINAL_202 REPONLY MISSING=0;
	VAR _NUMERIC_;
QUIT;


PROC SQL;

   CREATE TABLE TABELA_FINAL_203 AS 
   SELECT distinct t1.PREFIXO, t1.CARTEIRA, (t1.QTDE_TOTAL_PREF + t1.QTDE_TOTAL_PREF_PAA_1 + t1.QTDE_TOTAL_PREF_PAA_2) AS QTDE_TOTAL_PREF, input(t2.UOR, 9.) AS UOR 

          FROM TABELA_FINAL_202 t1
		  LEFT JOIN IGR.IGRREDE_&ANOMES. t2 ON t1.PREFIXO = input(t2.PREFDEP, 4.)
		  	        
   GROUP BY 1, 2          
   ORDER BY 1;

QUIT;


PROC SQL;

CREATE TABLE TABELA_FINAL AS

   SELECT * FROM FINAL_PREFIXO_EST_CTRA_3
   OUTER UNION CORR 
   SELECT * FROM TABELA_FINAL_203
   OUTER UNION CORR
   SELECT * FROM TABELA_FINAL_GEREV
   OUTER UNION CORR
   SELECT * FROM TABELA_FINAL_SUPER
   OUTER UNION CORR
   SELECT * FROM TABELA_FINAL_SUPPJPF
   OUTER UNION CORR
   SELECT * FROM TABELA_FINAL_DIR
   OUTER UNION CORR
   SELECT * FROM TABELA_FINAL_VICE
   ;

Quit;


PROC SQL;
   CREATE TABLE TABELA_PREFIXO AS 
   SELECT DISTINCT t1.PREFIXO AS PREFDEP, t1.CARTEIRA AS CTRA, QTDE_TOTAL_PREF AS TOTAL, t1.UOR
   FROM TABELA_FINAL t1
   ORDER BY 1, 2;
QUIT;


/**ENVIANDO PARA O CONEXÃO**/
/**ENVIANDO PARA O CONEXÃO**/
/**ENVIANDO PARA O CONEXÃO**/
/**ENVIANDO PARA O CONEXÃO**/


PROC SQL;
    CREATE TABLE WORK.PARA_BASE_CONEXAO_COMP AS
        SELECT
            179 as ind, /*CODIGO INDICADOR 180 */
            1 as COMP, /*CODIGO COMPONENTE, SE NÃO FOR COMPONENTE USAR 0*/
            0 as COMP_PAI, /*CODIGO COMPONENTE PAI, SE NÃO FOR COMPONENTE USAR 0*/
            1 as ORD_EXI, /*ORDEM EXIBIÇÃO, SE NÃO FOR COMPONENTE USAR 0*/
            UOR,
            t1.PREFDEP,
            t1.CTRA,            
            TOTAL as VLR_RLZ, /*VALOR REALIZADO*/
            0 as VLR_ORC, /*VALOR ORÇADO*/
			0 as VLR_ATG, /*VALOR ATINGIMENTO, por padrão 0, enviar somente se o atingimento tiver regra de cálculo*/  
			'28FEB2019'd  FORMAT YYMMDD10. AS POSICAO /*DATA DO VALOR LEVANTADO*/
        FROM TABELA_PREFIXO t1
		
ORDER BY PREFDEP;
QUIT;


PROC SQL;
    CREATE TABLE WORK.PARA_BASE_CONEXAO_IND AS
        SELECT
            179 as ind, /*CODIGO INDICADOR*/
            0 as COMP, /*CODIGO COMPONENTE, SE NÃO FOR COMPONENTE USAR 0*/
            0 as COMP_PAI, /*CODIGO COMPONENTE PAI, SE NÃO FOR COMPONENTE USAR 0*/
            0 as ORD_EXI, /*ORDEM EXIBIÇÃO, SE NÃO FOR COMPONENTE USAR 0*/
            UOR,
            t1.PREFDEP,
            t1.CTRA,            
            TOTAL as VLR_RLZ, /*VALOR REALIZADO*/
            0 as VLR_ORC, /*VALOR ORÇADO*/
			0 as VLR_ATG, /*VALOR ATINGIMENTO, por padrão 0, enviar somente se o atingimento tiver regra de cálculo*/  
			'28FEB2019'd  FORMAT YYMMDD10. AS POSICAO /*DATA DO VALOR LEVANTADO*/
        FROM TABELA_PREFIXO t1
		
ORDER BY PREFDEP;
QUIT;


DATA PARA_BASE_CONEXAO;
SET PARA_BASE_CONEXAO_IND PARA_BASE_CONEXAO_COMP;
BY PREFDEP;
RUN;


/*******************************************/
/*******************************************/
/*******************************************/
/******MONTANDO A TABELA DE CLIENTES********/


DATA CLIENTES_FINAL_500;
	MERGE FINAL_PREFIXO_1 FINAL_PAA_A1 FINAL_PAA_B1 FINAL_PREFIXO_EST_CTRA_2 MCIS_N_ENCART;
	BY PREFIXO CARTEIRA MCI;
RUN;


PROC SQL;
   CREATE TABLE CLIENTES_FINALIZADO AS 
   SELECT DISTINCT t1.PREFIXO AS PREFDEP, t1.CARTEIRA AS CTRA, MCI
   FROM CLIENTES_FINAL_500 t1
   ORDER BY 1, 2;
QUIT;


PROC SQL;
    CREATE TABLE WORK.BASE_CONEXAO_CLI AS
        SELECT
            179 as IND,
            1 as COMP,
            t1.PREFDEP,
            INPUT (t2.UOR, 10.) as UOR,
            CTRA,
            MCI as CLI,
            022019 as MMAAAA,
            1 as VLR
        FROM CLIENTES_FINALIZADO t1
inner join IGR.IGRREDE_&ANOMES. t2 on (put(t1.PREFDEP, z4.) = t2.PREFDEP);
QUIT;


/*%BaseIndicadorCNX(TabelaSAS=PARA_BASE_CONEXAO);
%BaseIndicadorCNX_CLI(TabelaSAS=BASE_CONEXAO_CLI);
%ExportarCNX_CLI(IND=179, MMAAAA=022019);
%ExportarCNX_IND(IND=179, MMAAAA=022019, ORC=0, RLZ=1); 
%ExportarCNX_COMP(IND=179, MMAAAA=022019, ORC=0, RLZ=1);*/ 


/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/
/*relatorio****************************************************/

