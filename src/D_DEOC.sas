/*#################################################################################################################*/
/*##### A B E R T U R A #####*/

%include '/dados/infor/suporte/FuncoesInfor.sas';
%LET Usuario=f9631159;
%LET Keypass=ZK4O74UA9UIBALW9N4XL3HHGTGTNG047;
%LET Rotina=deoc;


%ProcessoIniciar();


/*#################################################################################################################*/
/*##### B I B L I O T E C A S #####*/

LIBNAME DB2DEB 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2DEB 	database=BDB2P04;
LIBNAME DB2REL 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2REL 	database=BDB2P04;
LIBNAME DB2COP 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2COP	database=BDB2P04;
LIBNAME DB2UOR 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2UOR	database=BDB2P04;
LIBNAME DB2PRD 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2PRD	database=BDB2P04;
LIBNAME DB2MCO 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2MCO	database=BDB2P04;
LIBNAME DB2PNG 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2PNG	database=BDB2P04;
LIBNAME DB2MCI 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2MCI	database=BDB2P04;
LIBNAME DB2MCO 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2MCO	database=BDB2P04;
LIBNAME DB2OPR 		db2 AUTHDOMAIN=DB2SGCEN schema=DB2OPR	database=BDB2P04;
LIBNAME DB2SGCEN 	db2 AUTHDOMAIN=DB2SGCEN schema=DB2SGCEN database=BDB2P04;

LIBNAME DICRE		"/dados/externo/GECEN/DICRE";



/*#################################################################################################################*/
/*##### C O N S T A N T E S   E   V A R I A V E I S #####*/

/*CONTROLE DE DATAS*/
DATA _NULL_;
	DATA_INICIO = '01Nov2016'd;
	DATA_FIM = '31Dec2019'd;
	DATA_REFERENCIA = diaUtilAnterior(TODAY());
	D1 = IFN((TODAY() <= DATA_FIM), DATA_REFERENCIA, diaUtilAnterior(DATA_FIM + 1));
	D2 = diaUtilAnterior(D1);
	D3 = diaUtilAnterior(D2);
	ANOMES = IFN((D1 <= DATA_FIM), Put(D1, yymmn6.), Put(DATA_FIM, yymmn6.));
	DATA_INICIO_SQL="'"||put(D1, YYMMDDD10.)||"'";
	DATA_D1_SQL="'"||put(D1, YYMMDDD10.)||"'";
	DT_90D_SQL="'"||put(D1+90, YYMMDDD10.)||"'";

	CALL SYMPUT('DATA_HOJE',COMPRESS(TODAY(),' '));
	CALL SYMPUT('DATA_INICIO',COMPRESS(DATA_INICIO,' '));
	CALL SYMPUT('DATA_FIM',COMPRESS(DATA_FIM,' '));
	CALL SYMPUT('D1',COMPRESS(D1,' '));
	CALL SYMPUT('D2',COMPRESS(D2,' '));
	CALL SYMPUT('D3',COMPRESS(D3,' '));
	CALL SYMPUT('ANOMES',COMPRESS(ANOMES,' '));
	CALL SYMPUT('RF',COMPRESS(ANOMES,' '));
	CALL SYMPUT('DT_ARQUIVO',put(D1, DDMMYY10.));
	CALL SYMPUT('DT_ARQUIVO_SQL',put(D1, YYMMDDD10.));
	CALL SYMPUT('DATA_INICIO_SQL', COMPRESS(DATA_INICIO_SQL,' '));
	CALL SYMPUT('DATA_D1_SQL', COMPRESS(DATA_D1_SQL,' '));
	CALL SYMPUT('DT_90D_SQL', COMPRESS(DT_90D_SQL,' '));
	CALL SYMPUT('DT_90D', COMPRESS(D1+90,' '));
	CALL SYMPUT('DT_60D', COMPRESS(D1+60,' '));
	CALL SYMPUT('DT_30D', COMPRESS(D1+30,' '));
RUN; 


PROC FORMAT;
	VALUE status_doc
		1='Pendente de Apresentação'
		2='Aguardando validação'
		3='Apresentado'
		4='Dispensado'
		5='Cancelado'
		6='Versionado'
;RUN;

PROC FORMAT;
	VALUE status_venci
		3='Vincenda 30D'
		6='Vincenda 60D'
		9='Vincenda 90D'
		2='Vincenda +90D'
		1='Vencido'
		0='N/I'
;RUN;



/*#################################################################################################################*/
/*##### T A B E L A S #####*/
PROC SQL;
	DROP TABLE DB2SGCEN.PNG_OPR_TEMP;
	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE(
		CREATE TABLE DB2SGCEN.PNG_OPR_TEMP AS(
			SELECT DISTINCT
				t0.NR_DSIE_CRD,
				t1.NR_OBJ_NEG,
				t0.CD_CLI_DSIE AS CD_CLI,
				t7.VL_OPR,
				t7.DT_FRMZ,
				t7.DT_VNCT
			FROM DB2PNG.DSIE_CRD t0
			LEFT JOIN DB2PNG.OBJ_NEG_DSIE t1 ON (t0.NR_DSIE_CRD	 = t1.NR_DSIE_CRD)
			LEFT JOIN DB2COP.TCOP183 t2 ON (t1.NR_OBJ_NEG = t2.NRO_PROP)
			LEFT JOIN DB2OPR.CTR_OPR t7 ON (t2.NRO_UNIC_OPR = t7.NR_UNCO_CTR_OPR)
		) WITH NO DATA;
	) BY DB2;
	EXECUTE(
		INSERT INTO DB2SGCEN.PNG_OPR_TEMP 
			SELECT DISTINCT
				t0.NR_DSIE_CRD,
				t1.NR_OBJ_NEG,
				t0.CD_CLI_DSIE AS CD_CLI,
				t7.VL_OPR,
				t7.DT_FRMZ,
				t7.DT_VNCT
			FROM DB2PNG.DSIE_CRD t0
			LEFT JOIN DB2PNG.OBJ_NEG_DSIE t1 ON (t0.NR_DSIE_CRD	 = t1.NR_DSIE_CRD)
			LEFT JOIN DB2COP.TCOP183 t2 ON (t1.NR_OBJ_NEG = t2.NRO_PROP)
			LEFT JOIN DB2OPR.CTR_OPR t7 ON (t2.NRO_UNIC_OPR = t7.NR_UNCO_CTR_OPR)
			WHERE 
					t1.SG_SIS_CDTR = 'COP'
				AND t7.CD_EST_CDU=1 
	;) BY DB2;
	DISCONNECT FROM DB2;


	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE (SET CURRENT QUERY ACCELERATION ENABLE) BY DB2;
	CREATE TABLE DADOS_PNG AS
		SELECT
			*
		FROM CONNECTION TO DB2(
			SELECT DISTINCT
				t0.NR_DSIE_CRD,
				t0.NR_OBJ_NEG,
				t0.CD_CLI,
				t0.VL_OPR,
				t0.DT_FRMZ,
				t0.DT_VNCT,
				t4.DT_VLD_DOC,
				t4.NR_DSIE_CRD,
				t4.NR_SEQL_DOC,
				t4.NR_VRS_DOC,
				t4.CD_ESPC_DOC,
				t5.NR_SEQL_DOC,
				t5.NR_VRS_DOC,
				DATE(t5.TS_EST_DOC) AS DT_DOC,
				t5.CD_TIP_EST_DOC
			FROM DB2SGCEN.PNG_OPR_TEMP t0
			LEFT JOIN DB2PNG.OBJ_NEG_DSIE t1 ON (t0.NR_DSIE_CRD	 = t1.NR_DSIE_CRD)
			LEFT JOIN DB2PNG.DOC_DSIE t4 ON (t1.NR_DSIE_CRD = t4.NR_DSIE_CRD)
			LEFT JOIN DB2PNG.EST_DOC t5 ON (t4.NR_DSIE_CRD = t5.NR_DSIE_CRD AND t4.NR_SEQL_DOC = t5.NR_SEQL_DOC AND t4.NR_VRS_DOC = t5.NR_VRS_DOC)
			WHERE 
					t5.CD_TIP_EST_DOC IN (1, 2)
				AND t5.NR_VRS_DOC = (
										SELECT MAX(NR_VRS_DOC) AS NR_VRS_DOC 
										FROM DB2PNG.EST_DOC 
										WHERE 
												NR_DSIE_CRD = t5.NR_DSIE_CRD 
											AND NR_SEQL_DOC = t5.NR_SEQL_DOC 
									)
				AND t5.TS_EST_DOC = (
										SELECT MAX(TS_EST_DOC) AS TS_EST_DOC 
										FROM DB2PNG.EST_DOC 
										WHERE 
												NR_DSIE_CRD = t5.NR_DSIE_CRD 
											AND NR_SEQL_DOC = t5.NR_SEQL_DOC 
											AND NR_VRS_DOC = t5.NR_VRS_DOC
									)
			;);
	DISCONNECT FROM DB2;
	DROP TABLE DB2SGCEN.PNG_OPR_TEMP;
QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);


PROC SQL;
	DROP TABLE DB2SGCEN.PNG_OBJ_TEMP;
	CREATE TABLE DB2SGCEN.PNG_OBJ_TEMP AS
		SELECT DISTINCT
			NR_OBJ_NEG FORMAT=32. AS NR_OBJ_NEG
		FROM DADOS_PNG
		ORDER BY NR_OBJ_NEG;

	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE (SET CURRENT QUERY ACCELERATION ENABLE) BY DB2;
	CREATE TABLE DADOS_OPERACAO_PRODUTO AS
		SELECT
			*
		FROM CONNECTION TO DB2(
			SELECT DISTINCT
				t0.*,
				t2.PRF_DEPE AS PREF_CONTA, 
				t2.NRO_CNTA_CRTE AS CONTA,
				t2.NRO_PROP,
				t2.NRO_OPER,
				DIGITS(t2.NRO_UNIC_OPR) AS NRO_UNIC_OPR,
				t2.COD_LNCR,
				t7.CD_PRD,
				t7.CD_MDLD,
				t7.VL_OPR,
				t7.DT_FRMZ,
				t7.DT_VNCT,
				t9.CD_PRF_DEPE AS PREF_GESTOR
			FROM DB2SGCEN.PNG_OBJ_TEMP t0
			LEFT JOIN DB2COP.TCOP183 t2 ON (t0.NR_OBJ_NEG = t2.NRO_PROP)
			LEFT JOIN DB2OPR.CTR_OPR t7 ON (t2.NRO_UNIC_OPR = t7.NR_UNCO_CTR_OPR)
			LEFT JOIN DB2PRD.MDLD_PRD t9 ON (t7.CD_PRD= t9.CD_PRD AND t7.CD_MDLD=t9.CD_MDLD)
			WHERE t7.CD_EST_CDU=1
			;
		);
	DISCONNECT FROM DB2;
	DROP TABLE DB2SGCEN.PNG_OBJ_TEMP;
QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);


PROC SQL;
	CREATE TABLE TB_NRO_UNIC_OPR AS
		SELECT DISTINCT
			NRO_UNIC_OPR
		FROM DADOS_OPERACAO_PRODUTO
		ORDER BY NRO_UNIC_OPR;
QUIT;


PROC SQL;
	CREATE TABLE DADOS_OPERACAO_SALDO AS
		SELECT DISTINCT
				t0.NRO_UNIC_OPR,
				SUM(t2.VL_ATU_SCTR)	AS VL_ATU_SCTR
			FROM TB_NRO_UNIC_OPR t0
			LEFT JOIN DB2OPR.SDO_SCTR_OPR t2 ON (t0.NRO_UNIC_OPR = PUT(t2.NR_UNCO_CTR_OPR, Z17.))
			GROUP BY 1
;QUIT;

PROC SQL;
	CREATE TABLE WORK.DADOS_OPERACAO_PRODUTO AS 
		SELECT 
			t1.NR_OBJ_NEG, 
			t1.PREF_CONTA, 
			t1.CONTA, 
			t1.NRO_PROP, 
			t1.NRO_OPER, 
			t1.NRO_UNIC_OPR, 
			t1.COD_LNCR, 
			t1.CD_PRD, 
			t1.CD_MDLD, 
			t1.VL_OPR, 
			t1.DT_FRMZ, 
			t1.DT_VNCT, 
			t1.PREF_GESTOR,
			t2.VL_ATU_SCTR
		FROM WORK.DADOS_OPERACAO_PRODUTO t1
		LEFT JOIN WORK.DADOS_OPERACAO_SALDO t2 ON (t1.NRO_UNIC_OPR = t2.NRO_UNIC_OPR)
;QUIT;


%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);




PROC SQL;
	DROP TABLE DB2SGCEN.CD_CLI_DEOC_TEMP;
	CREATE TABLE DB2SGCEN.CD_CLI_DEOC_TEMP AS
		SELECT DISTINCT
			CD_CLI FORMAT=9. AS CD_CLI
		FROM DADOS_PNG
		ORDER BY CD_CLI;

	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE (SET CURRENT QUERY ACCELERATION ENABLE) BY DB2;
	CREATE TABLE DADOS_MCI AS
		SELECT
			*
		FROM CONNECTION TO DB2(
			SELECT DISTINCT
				t0.*,
				t6.COD_PREF_AGEN AS PREFDEP
			FROM DB2SGCEN.CD_CLI_DEOC_TEMP t0
			LEFT JOIN DB2MCI.CLIENTE t6 ON (t0.CD_CLI = t6.COD)
		;);
	DISCONNECT FROM DB2;
	DROP TABLE DB2SGCEN.CD_CLI_DEOC_TEMP;
QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);

/*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/
PROC SQL;
	DROP TABLE DB2SGCEN.PRD_MDLD_DEOC_TEMP;
	CREATE TABLE DB2SGCEN.PRD_MDLD_DEOC_TEMP AS
		SELECT DISTINCT
			CD_PRD FORMAT=6. AS CD_PRD,
			CD_MDLD FORMAT=6. AS CD_MDLD
		FROM DADOS_OPERACAO_PRODUTO
		ORDER BY 1,2;

	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE (SET CURRENT QUERY ACCELERATION ENABLE) BY DB2;
	CREATE TABLE PRD_MDLD AS
		SELECT
			*
		FROM CONNECTION TO DB2(
			SELECT DISTINCT
				t0.CD_PRD,
				t0.CD_MDLD,
				t8.NM_PRD,
				t9.NM_MDLD
			FROM DB2SGCEN.PRD_MDLD_DEOC_TEMP t0
			LEFT JOIN DB2PRD.PRD t8 ON (t0.CD_PRD= t8.CD_PRD)
			LEFT JOIN DB2PRD.MDLD_PRD t9 ON (t0.CD_PRD= t9.CD_PRD AND t0.CD_MDLD=t9.CD_MDLD)
		;);
	DISCONNECT FROM DB2;
	DROP TABLE DB2SGCEN.PRD_MDLD_DEOC_TEMP;
QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);

/*TABELA AUXILIAR DE TIPO DE DOCUMENTO*/
PROC SQL;
	DROP TABLE DB2SGCEN.TMCO_DEOC_TEMP;
	CREATE TABLE DB2SGCEN.TMCO_DEOC_TEMP AS
		SELECT DISTINCT
			CD_ESPC_DOC FORMAT=9. AS CD_ESPC_DOC
		FROM DADOS_PNG
		ORDER BY CD_ESPC_DOC;

	CONNECT TO DB2 (AUTHDOMAIN=DB2SGCEN DATABASE=BDB2P04);
	EXECUTE (SET CURRENT QUERY ACCELERATION ENABLE) BY DB2;
	CREATE TABLE ESPC_DOC AS
		SELECT
			&D1. FORMAT=DateMysql. as POSICAO,
			CD_ESPC_DOC,
			UPCASE(TIP_DOC) AS TIP_DOC
		FROM CONNECTION TO DB2(
			SELECT DISTINCT
				t0.CD_ESPC_DOC,
				t10.NOM_ESPC_DCTO AS TIP_DOC
			FROM DB2SGCEN.TMCO_DEOC_TEMP t0
			LEFT JOIN DB2MCO.TMCO119 t10 ON (t0.CD_ESPC_DOC = t10.COD_ESPC_DCTO)
		;);
	DISCONNECT FROM DB2;
	DROP TABLE DB2SGCEN.TMCO_DEOC_TEMP;
QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);

/*TABELA AUXILIAR DE TIPO LINHA DE CRÉDITO*/
PROC SQL;
	CREATE TABLE WORK.LINHA_CREDITO AS 
		SELECT 
			&D1. FORMAT=DateMysql. as POSICAO,
			t1.linha AS COD_LNCR, 
			t1.nome AS NM_LNCR
		FROM COMUM.DE_PARA_COP t1
;QUIT;

/*TABELA AUXILIAR DE TIPO DE STATUS DO VENCIMENTO*/
PROC SQL;
	CREATE TABLE status_venci (POSICAO NUM FORMAT=DateMysql., CD_STATUS NUM, STATUS CHAR(100));
	INSERT INTO status_venci VALUES(&D1., 3, 'Vincenda 30D');
	INSERT INTO status_venci VALUES(&D1., 6, 'Vincenda 60D');
	INSERT INTO status_venci VALUES(&D1., 9, 'Vincenda 90D');
	INSERT INTO status_venci VALUES(&D1., 2, 'Vincenda >90D');
	INSERT INTO status_venci VALUES(&D1., 1, 'Vencido');
	INSERT INTO status_venci VALUES(&D1., 0, 'N/I');
QUIT;


/*TABELA AUXILIAR DE TIPO DE STATUS DO DOCUMENTO*/
PROC SQL;
	CREATE TABLE status_doc (POSICAO NUM FORMAT=DateMysql., CD_STATUS NUM, STATUS CHAR(100));
	INSERT INTO status_doc VALUES(&D1., 1, 'Pendente de Apresentação');
	INSERT INTO status_doc VALUES(&D1., 2, 'Aguardando validação');
	INSERT INTO status_doc VALUES(&D1., 3, 'Apresentado');
	INSERT INTO status_doc VALUES(&D1., 4, 'Dispensado');
	INSERT INTO status_doc VALUES(&D1., 5, 'Cancelado');
	INSERT INTO status_doc VALUES(&D1., 6, 'Versionado');
QUIT;



/*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX*/


PROC SQL;
	CREATE TABLE WORK.BASE_INICIAL AS 
		SELECT 
			t1.NR_DSIE_CRD AS DOSSIE, 
			t1.NR_OBJ_NEG, 
			t1.CD_CLI, 
			t1.DT_VLD_DOC, 
			t1.NR_SEQL_DOC AS DOC, 
			t1.NR_VRS_DOC AS VERSAO, 
			t1.CD_ESPC_DOC AS CD_TIP_DOC,
			t1.DT_DOC, 
			t1.CD_TIP_EST_DOC FORMAT=status_doc.,
			t2.PREF_CONTA, 
			t2.CONTA, 
			t2.NRO_PROP, 
			t2.NRO_OPER, 
			t2.NRO_UNIC_OPR, 
			t2.COD_LNCR, 
			t2.CD_PRD, 
			t2.CD_MDLD, 
			t2.PREF_GESTOR,
          	t3.PREFDEP,
			t2.VL_OPR, 
			t2.DT_FRMZ, 
			t2.DT_VNCT, 
			t2.VL_ATU_SCTR
		FROM WORK.DADOS_PNG t1
		INNER JOIN WORK.DADOS_OPERACAO_PRODUTO t2 ON (t1.NR_OBJ_NEG=t2.NR_OBJ_NEG)
		LEFT JOIN WORK.DADOS_MCI t3 ON (t1.CD_CLI=t3.CD_CLI)
;QUIT;


%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);


/*ANALITICO POR DOCUMENTO*/
PROC SQL;
	CREATE TABLE ANALITICO AS
		SELECT DISTINCT
			&D1. FORMAT=DateMysql. as POSICAO,
			IFN(t2.CD_CLI IS MISSING, t1.PREFDEP, t2.CD_PRF_DEPE) AS PREFDEP,
			IFN(t2.CD_CLI IS MISSING, 7002, t2.NR_SEQL_CTRA) AS CARTEIRA,
			t1.CD_CLI,
			t1.PREF_CONTA, 
			t1.CONTA, 
			t1.DOSSIE, 
			t1.DOC, 
			t1.CD_TIP_DOC,
			t1.VERSAO, 
			t1.DT_DOC FORMAT=DateMysql.,
			t1.DT_VLD_DOC FORMAT=DateMysql., 
			(CASE
				WHEN (t1.DT_VLD_DOC IS MISSING) THEN 0
				WHEN (t1.DT_VLD_DOC < TODAY()) THEN 1
				WHEN (t1.DT_VLD_DOC > TODAY()) AND (t1.DT_VLD_DOC > &DT_90D. ) THEN 2
				WHEN (t1.DT_VLD_DOC > TODAY()) AND (t1.DT_VLD_DOC <= &DT_30D.) THEN 3
				WHEN (t1.DT_VLD_DOC > TODAY()) AND (t1.DT_VLD_DOC > &DT_30D. ) AND (t1.DT_VLD_DOC <= &DT_60D. )THEN 6
				WHEN (t1.DT_VLD_DOC > TODAY()) AND (t1.DT_VLD_DOC > &DT_60D. ) AND (t1.DT_VLD_DOC <= &DT_90D. )THEN 9
				ELSE 1
			END) AS STATUS_VENCIM,
			t1.CD_TIP_EST_DOC FORMAT=10.,
			t1.NRO_PROP, 
			t1.NRO_OPER, 
			t1.NRO_UNIC_OPR, 
			t1.CD_PRD, 
			t1.CD_MDLD, 
			t1.PREF_GESTOR, 
			t1.COD_LNCR,
			t1.VL_OPR, 
			t1.DT_FRMZ FORMAT=DateMysql., 
			t1.DT_VNCT FORMAT=DateMysql., 
			t1.VL_ATU_SCTR
		FROM BASE_INICIAL t1 
		LEFT JOIN COMUM.ENCARTEIRAMENTO_CONEXAO t2 ON (t1.CD_CLI=t2.CD_CLI)
		WHERE CALCULATED PREFDEP IS NOT MISSING
;QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);

PROC SQL;
	CREATE TABLE ANALITICO AS
		SELECT DISTINCT
			t1.POSICAO,
			t1.PREFDEP,
			t1.CARTEIRA,
			t1.CD_CLI,
			t1.PREF_CONTA, 
			t1.CONTA, 
			t1.DOSSIE, 
			t1.DOC, 
			t1.CD_TIP_DOC,
			t1.VERSAO, 
			t1.DT_DOC,
			t1.DT_VLD_DOC, 
			t1.STATUS_VENCIM,
			t1.CD_TIP_EST_DOC,
			t1.NRO_PROP, 
			t1.NRO_OPER, 
			t1.NRO_UNIC_OPR, 
			t1.CD_PRD, 
			t1.CD_MDLD, 
			t1.PREF_GESTOR, 
			t1.COD_LNCR,
			t1.VL_OPR, 
			t1.DT_FRMZ, 
			t1.DT_VNCT, 
			t1.VL_ATU_SCTR
		FROM ANALITICO t1 
		INNER JOIN COMUM.IGRREDE t2 ON (t1.PREFDEP = INPUT(t2.PrefDep, 4.))
		WHERE t2.TipoDep IN ('01','09')
;QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);

	

PROC SQL;
	CREATE TABLE SUMARIZACAO_CLIENTES AS
		SELECT DISTINCT
			&D1. FORMAT=DateMysql. as POSICAO,
			t1.PREFDEP,
			t1.CARTEIRA,
			t1.CD_CLI,
			COUNT(DISTINCT(t1.NRO_PROP)) AS QNT_NRO_PROP,
			COUNT(IFN(t1.STATUS_VENCIM=3, t1.CD_CLI, .)) AS QNT_VENC_30D,
			COUNT(IFN(t1.STATUS_VENCIM=6, t1.CD_CLI, .)) AS QNT_VENC_60D,
			COUNT(IFN(t1.STATUS_VENCIM=9, t1.CD_CLI, .)) AS QNT_VENC_90D,
			COUNT(IFN(t1.STATUS_VENCIM=1, t1.CD_CLI, .)) AS QNT_VENCIDO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=1, t1.CD_CLI, .)) AS QNT_PEND_APRES,
			COUNT(IFN(t1.CD_TIP_EST_DOC=2, t1.CD_CLI, .)) AS QNT_AGUAR_VALD,
			COUNT(IFN(t1.CD_TIP_EST_DOC=3, t1.CD_CLI, .)) AS QNT_APRESENTADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=4, t1.CD_CLI, .)) AS QNT_DISPENSADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=5, t1.CD_CLI, .)) AS QNT_CANCELADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=6, t1.CD_CLI, .)) AS QNT_VERSIONADO,
			COUNT(IFN(t1.STATUS_VENCIM=2, t1.CD_CLI, .)) AS QNT_VENC_MAIS_90D,
			COUNT(IFN(t1.STATUS_VENCIM=0, t1.CD_CLI, .)) AS QNT_VENC_NI
		FROM ANALITICO t1
		GROUP BY
			t1.PREFDEP,
			t1.CARTEIRA,
			t1.CD_CLI
;QUIT;


PROC SQL;
	CREATE TABLE SUMARIZACAO AS
		SELECT DISTINCT
			t1.PREFDEP,
			t1.CARTEIRA,
			COUNT(DISTINCT(t1.CD_CLI)) AS QNT_CLI,
			COUNT(DISTINCT(t1.NRO_PROP)) AS QNT_NRO_PROP,
			COUNT(IFN(t1.STATUS_VENCIM=3, t1.CD_CLI, .)) AS QNT_VENC_30D,
			COUNT(IFN(t1.STATUS_VENCIM=6, t1.CD_CLI, .)) AS QNT_VENC_60D,
			COUNT(IFN(t1.STATUS_VENCIM=9, t1.CD_CLI, .)) AS QNT_VENC_90D,
			COUNT(IFN(t1.STATUS_VENCIM=1, t1.CD_CLI, .)) AS QNT_VENCIDO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=1, t1.CD_CLI, .)) AS QNT_PEND_APRES,
			COUNT(IFN(t1.CD_TIP_EST_DOC=2, t1.CD_CLI, .)) AS QNT_AGUAR_VALD,
			COUNT(IFN(t1.CD_TIP_EST_DOC=3, t1.CD_CLI, .)) AS QNT_APRESENTADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=4, t1.CD_CLI, .)) AS QNT_DISPENSADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=5, t1.CD_CLI, .)) AS QNT_CANCELADO,
			COUNT(IFN(t1.CD_TIP_EST_DOC=6, t1.CD_CLI, .)) AS QNT_VERSIONADO,

			COUNT(IFN(t1.STATUS_VENCIM=2, t1.CD_CLI, .)) AS QNT_VENC_MAIS_90D,
			COUNT(IFN(t1.STATUS_VENCIM=0, t1.CD_CLI, .)) AS QNT_VENC_NI
		FROM ANALITICO t1
		GROUP BY
			t1.PREFDEP,
			t1.CARTEIRA;
QUIT;


/*#################################################################################################################*/
/*##### S U M A R I Z A C A O #####*/
	
/*TABELA COLUNAS PARA FUNCAO SUMARIZACAO*/
PROC SQL;
	DROP TABLE ColunasSumarizador;
	CREATE TABLE ColunasSumarizador (Coluna CHAR(50), Tipo CHAR(10), Alias CHAR(50) );
		/*COLUNAS PARA SUMARIZACAO*/
		INSERT INTO ColunasSumarizador VALUES ('QNT_CLI', 'SUM', 'QNT_CLI');
		INSERT INTO ColunasSumarizador VALUES ('QNT_NRO_PROP', 'SUM', 'QNT_NRO_PROP');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VENC_30D', 'SUM', 'QNT_VENC_30D');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VENC_60D', 'SUM', 'QNT_VENC_60D');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VENC_90D', 'SUM', 'QNT_VENC_90D');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VENCIDO', 'SUM', 'QNT_VENCIDO');
		INSERT INTO ColunasSumarizador VALUES ('QNT_PEND_APRES', 'SUM', 'QNT_PEND_APRES');
		INSERT INTO ColunasSumarizador VALUES ('QNT_AGUAR_VALD', 'SUM', 'QNT_AGUAR_VALD');
		INSERT INTO ColunasSumarizador VALUES ('QNT_APRESENTADO', 'SUM', 'QNT_APRESENTADO');
		INSERT INTO ColunasSumarizador VALUES ('QNT_DISPENSADO', 'SUM', 'QNT_DISPENSADO');
		INSERT INTO ColunasSumarizador VALUES ('QNT_CANCELADO', 'SUM', 'QNT_CANCELADO');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VERSIONADO', 'SUM', 'QNT_VERSIONADO');

		INSERT INTO ColunasSumarizador VALUES ('QNT_VENC_MAIS_90D', 'SUM', 'QNT_VENC_MAIS_90D');
		INSERT INTO ColunasSumarizador VALUES ('QNT_VENC_NI', 'SUM', 'QNT_VENC_NI');
QUIT;

/*FUNCAO DE SUMARIZACAO, RETORNA A TABELA FINAL*/
%SumarizadorSimples(TblSASValores=SUMARIZACAO, TblSASColunas=ColunasSumarizador);
%ZerarMissingTabela(FINAL);

PROC SQL;
	CREATE TABLE WORK.FINAL AS 
		SELECT 
			&D1. FORMAT=DateMysql. as POSICAO,
			t1.PrefDep, 
			t1.Carteira, 
			SUM(t1.QNT_CLI) FORMAT=32. AS QNT_CLI, 
			SUM(t1.QNT_NRO_PROP) FORMAT=32. AS QNT_NRO_PROP, 
			SUM(t1.QNT_VENC_30D) FORMAT=32. AS QNT_VENC_30D, 
			SUM(t1.QNT_VENC_60D) FORMAT=32. AS QNT_VENC_60D, 
			SUM(t1.QNT_VENC_90D) FORMAT=32. AS QNT_VENC_90D, 
			SUM(t1.QNT_VENCIDO) FORMAT=32. AS QNT_VENCIDO, 
			SUM(t1.QNT_PEND_APRES) FORMAT=32. AS QNT_PEND_APRES, 
			SUM(t1.QNT_AGUAR_VALD) FORMAT=32. AS QNT_AGUAR_VALD, 
			SUM(t1.QNT_APRESENTADO) FORMAT=32. AS QNT_APRESENTADO, 
			SUM(t1.QNT_DISPENSADO) FORMAT=32. AS QNT_DISPENSADO, 
			SUM(t1.QNT_CANCELADO) FORMAT=32. AS QNT_CANCELADO, 
			SUM(t1.QNT_VERSIONADO) FORMAT=32. AS QNT_VERSIONADO,

			SUM(t1.QNT_VENC_MAIS_90D) FORMAT=32. AS QNT_VENC_MAIS_90D, 
			SUM(t1.QNT_VENC_NI) FORMAT=32. AS QNT_VENC_NI 
		FROM WORK.FINAL t1
		GROUP BY 1,2,3
;QUIT;

%ProcessoEtapa(SeTabelaVaziaErro=FALSE, SeErroAbortar=TRUE);



/*TABELA AUXILIAR DE TABELAS DE CARGA E ROTINAS DO SISTEMA REL*/
PROC SQL;
	DROP TABLE TABELAS_EXPORTAR_REL;
	CREATE TABLE TABELAS_EXPORTAR_REL (TABELA_SAS CHAR(100), ROTINA CHAR(100));
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('FINAL', 'deoc');
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('ANALITICO', 'cliente');
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('LINHA_CREDITO', 'linha-de-credito');
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('status_venci', 'status-vencim');
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('status_doc', 'status-doc');
	INSERT INTO TABELAS_EXPORTAR_REL VALUES('ESPC_DOC', 'cd-espc-doc');
QUIT;

%ProcessoCarregarEncerrar(TABELAS_EXPORTAR_REL);








